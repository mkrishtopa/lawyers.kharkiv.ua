//
// Mixins
// --------------------------------------------------


// Utilities
// -------------------------

// Clearfix
// Source: http://nicolasgallagher.com/micro-clearfix-hack/
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.

@mixin inline-block() {
  display: inline-block;
  vertical-align: top;
}
@mixin text-hidden() {
  text-indent: -9999px;
  overflow:hidden;
  text-align: left;
}
@mixin clear-ul() {
  list-style: none;
  margin: 0;
  padding: 0;
}
@mixin clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}

// WebKit-style focus
@mixin tab-focus() {
  // Default
  outline: thin dotted;
  // WebKit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

// Center-align a block level element
@mixin center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// Sizing shortcuts
@mixin size($width, $height) {
  width: $width;
  height: $height;
}
@mixin square($size) {
  @include size($size, $size);
}

// Placeholder text
@mixin placeholder($color: $input-color-placeholder) {
  &::-moz-placeholder           { color: $color;   // Firefox
                                  opacity: 1; }    // See https://github.com/twbs/bootstrap/pull/11526
  &:-ms-input-placeholder       { color: $color; } // Internet Explorer 10+
  &::-webkit-input-placeholder  { color: $color; } // Safari and Chrome
}

// Text overflow
// Requires inline-block or block for proper styling
@mixin text-overflow() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// CSS image replacement
//
// Heads up! v3 launched with with only `.hide-text()`, but per our pattern for
// mixins being reused as classes with the same name, this doesn't hold up. As
// of v3.0.1 we have added `.text-hide()` and deprecated `.hide-text()`. Note
// that we cannot chain the mixins together in Less, so they are repeated.
//
// Source: https://github.com/h5bp/html5-boilerplate/commit/aa0396eae757

// Deprecated as of v3.0.1 (will be removed in v4)
@mixin hide-text() {
  font: #{"0/0"} a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}
// New mixin to use as of v3.0.1
@mixin text-hide() {
  @include hide-text();
}



// CSS3 PROPERTIES
// --------------------------------------------------

// Single side border-radius
@mixin border-top-radius($radius) {
  border-top-right-radius: $radius;
   border-top-left-radius: $radius;
}
@mixin border-right-radius($radius) {
  border-bottom-right-radius: $radius;
     border-top-right-radius: $radius;
}
@mixin border-bottom-radius($radius) {
  border-bottom-right-radius: $radius;
   border-bottom-left-radius: $radius;
}
@mixin border-left-radius($radius) {
  border-bottom-left-radius: $radius;
     border-top-left-radius: $radius;
}
@mixin border-radius($radius) {
          border-radius: ($radius);
  -webkit-border-radius: ($radius);
     -moz-border-radius: ($radius);
}

// Drop shadows
@mixin box-shadow($shadow) {
  -webkit-box-shadow: $shadow; // iOS <4.3 & Android <4.1
          box-shadow: $shadow;
}
// Text shadows
@mixin text-shadow($shadow) {
  -webkit-text-shadow: $shadow; // iOS <4.3 & Android <4.1
          text-shadow: $shadow;
}

// Transitions
@mixin transition($transition) {
  -webkit-transition: $transition;
     -moz-transition: $transition;
       -o-transition: $transition;
          transition: $transition;
}
@mixin multi-transition($transition) {
  -webkit-transition: #{$transition};
     -moz-transition: #{$transition};
      -ms-transition: #{$transition};
       -o-transition: #{$transition};
          transition: #{$transition};
}
@mixin transition-property($transition-property) {
  -webkit-transition-property: $transition-property;
          transition-property: $transition-property;
}
@mixin transition-delay($transition-delay) {
  -webkit-transition-delay: $transition-delay;
          transition-delay: $transition-delay;
}
@mixin transition-duration($transition-duration) {
  -webkit-transition-duration: $transition-duration;
          transition-duration: $transition-duration;
}
@mixin transition-transform($transition) {
  -webkit-transition: -webkit-transform $transition;
     -moz-transition: -moz-transform $transition;
       -o-transition: -o-transform $transition;
          transition: transform $transition;
}

// Transformations
@mixin rotate($degrees) {
  -webkit-transform: rotate($degrees);
      -ms-transform: rotate($degrees); // IE9 only
          transform: rotate($degrees);
}
@mixin scale($ratio, $ratio-y...) {
  -webkit-transform: scale($ratio, $ratio-y);
      -ms-transform: scale($ratio, $ratio-y); // IE9 only
          transform: scale($ratio, $ratio-y);
}
@mixin translate($x, $y) {
  -webkit-transform: translate($x, $y);
      -ms-transform: translate($x, $y); // IE9 only
          transform: translate($x, $y);
}
@mixin translate-rotate($x, $y, $degrees) {
  -webkit-transform: translate($x, $y) rotate($degrees);
      -ms-transform: translate($x, $y) rotate($degrees); // IE9 only
          transform: translate($x, $y) rotate($degrees);
}
@mixin translateX($x) {
  -webkit-transform: translateX($x);
      -ms-transform: translateX($x); // IE9 only
          transform: translateX($x);
}
@mixin translateY($y) {
  -webkit-transform: translateY($y);
      -ms-transform: translateY($y); // IE9 only
          transform: translateY($y);
}
@mixin skew($x, $y) {
  -webkit-transform: skew($x, $y);
      -ms-transform: skewX($x) skewY($y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+
          transform: skew($x, $y);
}
@mixin translate3d($x, $y, $z) {
  -webkit-transform: translate3d($x, $y, $z);
          transform: translate3d($x, $y, $z);
}

@mixin rotateX($degrees) {
  -webkit-transform: rotateX($degrees);
      -ms-transform: rotateX($degrees); // IE9 only
          transform: rotateX($degrees);
}
@mixin rotateY($degrees) {
  -webkit-transform: rotateY($degrees);
      -ms-transform: rotateY($degrees); // IE9 only
          transform: rotateY($degrees);
}
@mixin perspective($perspective) {
  -webkit-perspective: $perspective;
     -moz-perspective: $perspective;
          perspective: $perspective;
}
@mixin perspective-origin($perspective) {
  -webkit-perspective-origin: $perspective;
     -moz-perspective-origin: $perspective;
          perspective-origin: $perspective;
}
@mixin transform-origin($origin) {
  -webkit-transform-origin: $origin;
     -moz-transform-origin: $origin;
      -ms-transform-origin: $origin; // IE9 only
          transform-origin: $origin;
}
@mixin gradient($gradient1, $gradient2) {
  background: -moz-linear-gradient(top, $gradient1 0%, $gradient2 100%);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $gradient1), color-stop(100%, $gradient2));
  background: -webkit-linear-gradient(top, $gradient1 0%, $gradient2 100%);
  background: -o-linear-gradient(top, $gradient1 0%, $gradient2 100%);
  background: -ms-linear-gradient(top, $gradient1 0%, $gradient2 100%);
  background: linear-gradient(to bottom, $gradient1 0%, $gradient2  100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=$gradient1, endColorstr=$gradient2,GradientType=0 );
}
// Animations
@mixin animation($animation) {
  -webkit-animation: $animation;
          animation: $animation;
}
@mixin animation-name($name) {
  -webkit-animation-name: $name;
          animation-name: $name;
}
@mixin animation-duration($duration) {
  -webkit-animation-duration: $duration;
          animation-duration: $duration;
}
@mixin animation-timing-function($timing-function) {
  -webkit-animation-timing-function: $timing-function;
          animation-timing-function: $timing-function;
}
@mixin animation-delay($delay) {
  -webkit-animation-delay: $delay;
          animation-delay: $delay;
}
@mixin animation-iteration-count($iteration-count) {
  -webkit-animation-iteration-count: $iteration-count;
          animation-iteration-count: $iteration-count;
}
@mixin animation-direction($direction) {
  -webkit-animation-direction: $direction;
          animation-direction: $direction;
}

// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden`
@mixin backface-visibility($visibility) {
  -webkit-backface-visibility: $visibility;
     -moz-backface-visibility: $visibility;
          backface-visibility: $visibility;
}

// Box sizing
@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
     -moz-box-sizing: $boxmodel;
          box-sizing: $boxmodel;
}

// User select
// For selecting text on the page
@mixin user-select($select)
{
  -webkit-user-select: $select;
     -moz-user-select: $select;
      -ms-user-select: $select; // IE10+
          user-select: $select;
}

// Resize anything
@mixin resizable($direction)
{
  resize: $direction; // Options: horizontal, vertical, both
  overflow: auto; // Safari fix
}

// CSS3 Content Columns
@mixin content-columns($column-count)
{
  -webkit-column-count: $column-count;
     -moz-column-count: $column-count;
          column-count: $column-count;
}

// Optional hyphenation
@mixin hyphens($mode: auto)
{
  word-wrap: break-word;
  -webkit-hyphens: $mode;
     -moz-hyphens: $mode;
      -ms-hyphens: $mode; // IE10+
       -o-hyphens: $mode;
          hyphens: $mode;
}

// Opacity
@mixin opacity($opacity)
{
  opacity: $opacity;
  // IE8 filter
  $opacity-ie: ($opacity * 100);
  filter: #{"alpha(opacity=#{$opacity-ie})"};
}

@mixin calc($property, $expression) {
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

@mixin horizontal-centering {
  // Don't forget to set position:relative to container
  @include translateX(-50%);
  position: absolute;
  left: 50%;
}
@mixin vertical-centering {
  // Don't forget to set position:relative to container
  @include translateY(-50%);
  position: absolute;
  top: 50%;
}
@mixin vertical-centering-clear {
  @include translateY(0);
  top: auto;
}
@mixin vh-centering {
  // Don't forget to set position:relative to container
  @include translate(-50%, -50%);
  position: absolute;
  top: 50%;
  left: 50%;
}

@mixin glyph-icon {
  display: inline-block;
  font-family: 'Glyphicons Halflings';
  font-style: normal;
  font-weight: normal;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin icomoon {
  display: inline-block;
  font-family: 'icomoon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin filter($property) {
  -webkit-filter: $property;
     -moz-filter: $property;
          filter: $property;
}
@mixin appearance($property) {
  -webkit-appearance: $property;
     -moz-appearance: $property;
          appearance: $property;
}

@mixin border-image($url, $framewidth, $borderwidth, $defaultcolor: #ffffff) {
  // $url: url of border image
  // $framewidth: width of frame on the image
  // $borderwidth: width of border on the object
  // $defaultcolor: default border color
  -webkit-transform: translate3d(0, 0, 0);
  border-width: #{$borderwidth}px;
  border-style: solid;
  border-color: $defaultcolor;
  -webkit-border-image: url($url) $framewidth repeat;
     -moz-border-image: url($url) $framewidth repeat;
       -o-border-image: url($url) $framewidth repeat;
          border-image: url($url) $framewidth fill repeat;
}


// Force Hardware Acceleration in WebKit with translate3d
@mixin webkit-hw-accel {
  -webkit-transform: translate3d(0, 0, 0);
}
